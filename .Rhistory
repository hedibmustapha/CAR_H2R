wash_7_genre = ifelse(wash_6_infra_20p == "oui", wash_7_genre, NA),
wash_8_diff_infra_2 = ifelse(wash_8_diff_infra_1 %!in% c("nsp","aucun"), wash_8_diff_infra_2, NA),
wash_8_diff_infra_3 = ifelse(wash_8_diff_infra_1 %!in% c("nsp","aucun") & wash_8_diff_infra_2 %!in% c("nsp","aucun"), wash_8_diff_infra_3, NA),
protec_2_secu_ad_hommes = ifelse(protec_2_secu_ad == "oui", protec_2_secu_ad_hommes, NA),
protec_2_secu_ad_femmes = ifelse(protec_2_secu_ad == "oui", protec_2_secu_ad_femmes, NA),
protec_3_secu_kid_garcons = ifelse(protec_3_secu_kid == "oui", protec_3_secu_kid_garcons, NA),
protec_3_secu_kid_filles = ifelse(protec_3_secu_kid == "oui", protec_3_secu_kid_filles, NA),
protec_4_incident_type_2 = ifelse(protec_4_incident_type_1 %!in% c("nsp","aucun"), protec_4_incident_type_2, NA),
protec_4_incident_type_3 = ifelse(protec_4_incident_type_1 %!in% c("nsp","aucun") & protec_4_incident_type_2 %!in% c("nsp","aucun"), protec_4_incident_type_3, NA),
protec_5_travailforce_type = ifelse(protec_5_travailforce == "oui", protec_5_travailforce_type, NA),
aap_2_goodaide = ifelse(aap_1_aide == "oui", aap_2_goodaide, NA),
aap_4_typeinfos_2 = ifelse(aap_4_typeinfos_1 != "nsp", aap_4_typeinfos_2, NA),
aap_4_typeinfos_3 = ifelse(aap_4_typeinfos_1 != "nsp" & aap_4_typeinfos_2 != "nsp", aap_4_typeinfos_3, NA))
final_data <- bind_rows(template_data, localite_data)
final_data <- final_data %>% replace_with_na_all(condition = ~is.nan(.x))
final_data <- final_data %>% replace_with_na_all(condition = ~.x == "NaN")
final_data <- final_data %>% select_if(~ !(all(is.na(.x)) | all(. == "")))
library(miniUI)
final_data <- bind_rows(template_data, localite_data)
final_data <- final_data %>% replace_with_na_all(condition = ~is.nan(.x))
mime::parse_multipart()
##### ADJUST ONLY THE CODE HERE ####
##### UNLESS THE TOOL HAS CHANGED ##
CLEANED_DATASET <- "input/CAR_MSNA2020_KI_H2R_dataset_validated.xlsm"
AGGREGATED_DATASET <- paste0("output/car_msna_ki_aggregated_",lubridate::today(),".csv")
# install.packages("readxl")
####################################
library(tidyverse)
library(readxl)
library(composr)
hsm_preferred_response <- function(x, type, preferred_response) {
type <- type[which(!is.na(x))]
x <- x[!is.na(x)]
if (preferred_response %in% x[type %in% c("vit_localite", "visite_localite")]) {
return(preferred_response)
} else if (any(type %in% c("vit_localite", "visite_localite")) | sum(x %in% preferred_response) == 0) {
ux <- unique(x)
table <- tabulate(match(x, ux))
max_appearance <- max(tabulate(match(x, ux)))
num_matches <- length(which(tabulate(match(x, ux)) == max_appearance))
if (num_matches > 1) {
if (sum(x %in% preferred_response) == max_appearance) {
return(preferred_response)
} else {
return("AC")
}
} else {
ux[which.max(tabulate(match(x, ux)))]
}
} else {
return(preferred_response)
}
}
hsm_mode <- function(x, type) {
type <- type[which(!is.na(x))]
x <- x[!is.na(x)]
ux <- unique(x)
table <- tabulate(match(x, ux))
max_appearance <- max(table)
num_matches <- length(which(table == max_appearance))
if (num_matches > 1) {
tied <- ux[which(table == max_appearance)]
tied_visited <- integer(0)
for (i in 1:length(tied)) {
tied_visited[i] <- sum(type[x %in% tied[i]] %in% c("vit_localite", "visite_localite"))
}
if (sum(tied_visited == max(tied_visited)) == 1) {
return (tied[which.max(tied_visited)])
} else {
return("AC")
}
} else {
ux[which.max(table)]
}
}
'%!in%' = Negate('%in%')
#Reading data and form
data <- read_xlsx(CLEANED_DATASET, sheet = "Clean Data", na = c(""," ",NA,999))
names(data)<-gsub("[/]",".",names(data))
# Template dataset to merge at the end
template_data <- data[0,]
# Remove other questions
data <- data %>%
select(everything(), -ends_with("_autre"))
data <- data %>% mutate(
ig_3_groupop_pourcentage_1 = ifelse(ig_3_groupop_pourcentage_somme != "100",NA,ig_3_groupop_pourcentage_1),
ig_3_groupop_pourcentage_2 = ifelse(ig_3_groupop_pourcentage_somme != "100",NA,ig_3_groupop_pourcentage_2),
ig_3_groupop_pourcentage_3 = ifelse(ig_3_groupop_pourcentage_somme != "100",NA,ig_3_groupop_pourcentage_3),
ig_3_groupop_pourcentage_4 = ifelse(ig_3_groupop_pourcentage_somme != "100",NA,ig_3_groupop_pourcentage_4),
ig_3_groupop_pourcentage_5 = ifelse(ig_3_groupop_pourcentage_somme != "100",NA,ig_3_groupop_pourcentage_5),
abri_2_pourcentage_1 = ifelse(abri_2_pourcentage_somme != "100",NA,abri_2_pourcentage_1),
abri_2_pourcentage_2 = ifelse(abri_2_pourcentage_somme != "100",NA,abri_2_pourcentage_2),
abri_2_pourcentage_3 = ifelse(abri_2_pourcentage_somme != "100",NA,abri_2_pourcentage_3),
abri_2_pourcentage_4 = ifelse(abri_2_pourcentage_somme != "100",NA,abri_2_pourcentage_4),
abri_2_pourcentage_5 = ifelse(abri_2_pourcentage_somme != "100",NA,abri_2_pourcentage_5),
abri_2_pourcentage_6 = ifelse(abri_2_pourcentage_somme != "100",NA,abri_2_pourcentage_6),
abri_2_pourcentage_7 = ifelse(abri_2_pourcentage_somme != "100",NA,abri_2_pourcentage_7),
abri_2_pourcentage_8 = ifelse(abri_2_pourcentage_somme != "100",NA,abri_2_pourcentage_8),
abri_2_pourcentage_9 = ifelse(abri_2_pourcentage_somme != "100",NA,abri_2_pourcentage_9),
abri_2_pourcentage_10 = ifelse(abri_2_pourcentage_somme != "100",NA,abri_2_pourcentage_10),
ig_3_groupop_pourcentage_somme = ifelse(ig_3_groupop_pourcentage_somme != "100",NA,ig_3_groupop_pourcentage_somme),
abri_2_pourcentage_somme = ifelse(abri_2_pourcentage_somme != "100",NA,abri_2_pourcentage_somme)
)
# Questions that are always oui
ques_oui <- c("protec_4_incident", "protec_6_kids_outHH_1",  "protec_6_kids_outHH_2" , "protec_6_kids_outHH_3",
"protec_6_kids_outHH_4" , "protec_6_kids_outHH_5" , "protec_6_kids_outHH_6" ,
"protec_6_kids_outHH_7",  "protec_6_kids_outHH_8" , "protec_6_kids_outHH_9" , "protec_6_kids_outHH_10")
proportion_vars <- c("ig_3_groupop_pourcentage_1",	"ig_3_groupop_pourcentage_2",	"ig_3_groupop_pourcentage_3",	"ig_3_groupop_pourcentage_4",
"ig_3_groupop_pourcentage_5",	"ig_3_groupop_pourcentage_somme","abri_2_pourcentage_1"	,
"abri_2_pourcentage_2",	"abri_2_pourcentage_3",	"abri_2_pourcentage_4",	"abri_2_pourcentage_5",	"abri_2_pourcentage_6",
"abri_2_pourcentage_7",	"abri_2_pourcentage_8",	"abri_2_pourcentage_9",	"abri_2_pourcentage_10",	"abri_2_pourcentage_somme")
# Aggregating all questions
oui_localite_data <- data %>%
group_by(info_prefecture_H2R, info_sous_prefecture_H2R, info_commune_H2R, info_loc_H2R) %>%
summarize_at(vars(ques_oui), ~hsm_preferred_response(., .data[["type_contact"]], "oui"))
autre_localite_data_names <- data %>%
select(info_prefecture_H2R, info_sous_prefecture_H2R, info_commune_H2R, info_loc_H2R, ig_2_chocpop:aap_6_retouraide, -one_of(ques_oui),
-one_of(proportion_vars)) %>% names
autre_localite_data<-matrix(NA,length(unique(data$info_loc_H2R)),length(autre_localite_data_names))
colnames(autre_localite_data)<-autre_localite_data_names
autre_localite_data<-as.data.frame(autre_localite_data)
autre_localite_data[,c(1:4)]<-data[!duplicated(data[,c("info_prefecture_H2R", "info_sous_prefecture_H2R", "info_commune_H2R", "info_loc_H2R")]),][,c("info_prefecture_H2R", "info_sous_prefecture_H2R", "info_commune_H2R", "info_loc_H2R")]
for(i in 5:length(autre_localite_data)){
for(j in 1:nrow(autre_localite_data)){
autre_localite_data[j,i]<-hsm_mode(x = data[[names(autre_localite_data)[i]]][which(data$info_loc_H2R==autre_localite_data$info_loc_H2R[j])],
type = data$type_contact[which(data$info_loc_H2R==autre_localite_data$info_loc_H2R[j])])
}
}
numerical_data_names <- data %>%
select(info_prefecture_H2R, info_sous_prefecture_H2R, info_commune_H2R, info_loc_H2R, all_of(proportion_vars)) %>% names
numerical_data<-matrix(NA,length(unique(data$info_loc_H2R)),length(numerical_data_names))
colnames(numerical_data)<-numerical_data_names
numerical_data<-as.data.frame(numerical_data)
numerical_data[,c(1:4)]<-data[!duplicated(data[,c("info_prefecture_H2R", "info_sous_prefecture_H2R", "info_commune_H2R", "info_loc_H2R")]),][,c("info_prefecture_H2R", "info_sous_prefecture_H2R", "info_commune_H2R", "info_loc_H2R")]
for(i in 5:length(numerical_data)){
for(j in 1:nrow(numerical_data)){
numerical_data[j,i]<- as.character(round(mean(as.numeric(data[[names(numerical_data)[i]]][which(data$info_loc_H2R==numerical_data$info_loc_H2R[j])]),na.rm = T)))
}
}
# Aggregating all data
localite_data <- oui_localite_data %>%
left_join(autre_localite_data, by = c("info_prefecture_H2R", "info_sous_prefecture_H2R", "info_commune_H2R", "info_loc_H2R")) %>%
left_join(numerical_data,by = c("info_prefecture_H2R", "info_sous_prefecture_H2R", "info_commune_H2R", "info_loc_H2R"))
localite_data <- localite_data %>%
mutate(ig_2_chocpop_why = ifelse(ig_2_chocpop == "oui", ig_2_chocpop_why, NA),
ig_3_groupop_pourcentage_1 = ifelse(sm_selected(ig_3_groupop,any = c("hote")), ig_3_groupop_pourcentage_1, NA),
ig_3_groupop_pourcentage_2 = ifelse(sm_selected(ig_3_groupop,any = c("IDP_site")), ig_3_groupop_pourcentage_2, NA),
ig_3_groupop_pourcentage_3 = ifelse(sm_selected(ig_3_groupop,any = c("IDP_FA")), ig_3_groupop_pourcentage_3, NA),
ig_3_groupop_pourcentage_4 = ifelse(sm_selected(ig_3_groupop,any = c("retourne")), ig_3_groupop_pourcentage_4, NA),
ig_3_groupop_pourcentage_5 = ifelse(sm_selected(ig_3_groupop,any = c("rapatrie")),ig_3_groupop_pourcentage_5, NA),
ig_4_raison_idp = ifelse(sm_selected(ig_3_groupop,any = c("IDP_site","IDP_FA")), ig_4_raison_idp, NA),
ig_5_choix_idp = ifelse(sm_selected(ig_3_groupop,any = c("IDP_site","IDP_FA")), ig_5_choix_idp, NA),
ig_6_duree_idp = ifelse(sm_selected(ig_3_groupop,any = c("IDP_site","IDP_FA")), ig_6_duree_idp, NA),
ig_7_raisonretour_idp = ifelse(sm_selected(ig_3_groupop,any = c("IDP_site","IDP_FA")), ig_7_raisonretour_idp, NA),
ig_8_raison_ret_rapat = ifelse(sm_selected(ig_3_groupop,any = c("retourne","rapatrie")), ig_8_raison_ret_rapat, NA),
ig_9_destinationfinale_perc = ifelse(sm_selected(ig_3_groupop,any = c("retourne","rapatrie")), ig_9_destinationfinale_perc, NA),
ig_10_destinationfinale_raison = ifelse(sm_selected(ig_3_groupop,any = c("retourne","rapatrie"))& ig_9_destinationfinale_perc != 'ret_rap_destfinale_0', ig_10_destinationfinale_raison, NA),
abri_2_pourcentage_1 = ifelse(abri_1_type.nsp == 0 & abri_1_type.maison_dur_finie == 1, abri_2_pourcentage_1, NA),
abri_2_pourcentage_2 = ifelse(abri_1_type.nsp == 0 & abri_1_type.maison_dur_non_finie == 1, abri_2_pourcentage_2, NA),
abri_2_pourcentage_3 = ifelse(abri_1_type.nsp == 0 & abri_1_type.maison_semi_dur == 1, abri_2_pourcentage_3, NA),
abri_2_pourcentage_4 = ifelse(abri_1_type.nsp == 0 & abri_1_type.habitat_paille == 1, abri_2_pourcentage_4, NA),
abri_2_pourcentage_5 = ifelse(abri_1_type.nsp == 0 & abri_1_type.abri_collectif == 1, abri_2_pourcentage_5, NA),
abri_2_pourcentage_6 = ifelse(abri_1_type.nsp == 0 & abri_1_type.tente == 1, abri_2_pourcentage_6, NA),
abri_2_pourcentage_7 = ifelse(abri_1_type.nsp == 0 & abri_1_type.abri_urgence_bache == 1, abri_2_pourcentage_7, NA),
abri_2_pourcentage_8 = ifelse(abri_1_type.nsp == 0 & abri_1_type.abri_urgence_paille == 1, abri_2_pourcentage_8, NA),
abri_2_pourcentage_9 = ifelse(abri_1_type.nsp == 0 & abri_1_type.aucun == 1, abri_2_pourcentage_9, NA),
abri_2_pourcentage_10 = ifelse(abri_1_type.nsp == 0 & abri_1_type.autre == 1, abri_2_pourcentage_10, NA),
abri_4_problem_2 = ifelse(abri_4_problem_1 %!in% c("nsp","aucun"), abri_4_problem_2, NA),
abri_4_problem_3 = ifelse(abri_4_problem_1 %!in% c("nsp","aucun") & abri_4_problem_2 %!in% c("nsp","aucun"), abri_4_problem_3, NA),
abri_5_damage_2 = ifelse(abri_5_damage_1 %!in% c("nsp","aucun"), abri_5_damage_2, NA),
abri_5_damage_3 =ifelse(abri_5_damage_1 %!in% c("nsp","aucun") & abri_5_damage_2 %!in% c("nsp","aucun"), abri_5_damage_3, NA),
sante_1_1_maternite = ifelse(sante_1_maternite == "maison", sante_1_1_maternite, NA),
sante_1_2_maternite = ifelse(sante_1_maternite == "maison" & sante_1_1_maternite != "nsp", sante_1_2_maternite, NA),
sante_1_3_maternite = ifelse(sante_1_maternite == "maison" & sante_1_1_maternite != "nsp" & sante_1_2_maternite != "nsp", sante_1_3_maternite, NA),
sante_2_diff_soin_2 = ifelse(sante_2_diff_soin_1 %!in% c("nsp","aucun"), sante_2_diff_soin_2, NA),
sante_2_diff_soin_3 = ifelse(sante_2_diff_soin_1 %!in% c("nsp","aucun") & sante_2_diff_soin_2 %!in% c("nsp","aucun"), sante_2_diff_soin_3, NA),
sante_6_deces_2 = ifelse(sante_6_deces_1 != "nsp", sante_6_deces_2, NA),
sante_6_deces_3 = ifelse(sante_6_deces_1 != "nsp" & sante_6_deces_2 != "nsp", sante_6_deces_3, NA),
secal_2_income_source_2 = ifelse(secal_2_income_source_1 != "nsp", secal_2_income_source_2, NA),
secal_2_income_source_3 = ifelse(secal_2_income_source_1 != "nsp" & secal_2_income_source_2 != "nsp", secal_2_income_source_3, NA),
secal_4_agri_diff_2 = ifelse(secal_4_agri_diff_1 != "nsp", secal_4_agri_diff_2, NA),
secal_4_agri_diff_3 = ifelse(secal_4_agri_diff_1 != "nsp" & secal_4_agri_diff_2 != "nsp", secal_4_agri_diff_3, NA),
mssc_1_foodsource_2 = ifelse(mssc_1_foodsource_1 != "nsp", mssc_1_foodsource_2, NA),
mssc_1_foodsource_3 = ifelse(mssc_1_foodsource_1 != "nsp" & mssc_1_foodsource_2 != "nsp", mssc_1_foodsource_3, NA),
mssc_4_marketappro_2 = ifelse(mssc_4_marketappro_1 %!in% c("nsp","aucun"), mssc_4_marketappro_2, NA),
mssc_4_marketappro_3 = ifelse(mssc_4_marketappro_1 %!in% c("nsp","aucun") & mssc_4_marketappro_2 %!in% c("nsp","aucun"), mssc_4_marketappro_3, NA),
nut_4_diff_soin_2 = ifelse(nut_4_diff_soin_1 %!in% c("nsp","aucun"), nut_4_diff_soin_2, NA),
nut_4_diff_soin_3 = ifelse(nut_4_diff_soin_1 %!in% c("nsp","aucun") & nut_4_diff_soin_2 %!in% c("nsp","aucun"), nut_4_diff_soin_3, NA),
wash_4_diff_eau_2 = ifelse(wash_4_diff_eau_1 %!in% c("nsp","aucun"), wash_4_diff_eau_2, NA),
wash_4_diff_eau_3 = ifelse(wash_4_diff_eau_1 %!in% c("nsp","aucun") & wash_4_diff_eau_2 %!in% c("nsp","aucun"), wash_4_diff_eau_3, NA),
wash_7_genre = ifelse(wash_6_infra_20p == "oui", wash_7_genre, NA),
wash_8_diff_infra_2 = ifelse(wash_8_diff_infra_1 %!in% c("nsp","aucun"), wash_8_diff_infra_2, NA),
wash_8_diff_infra_3 = ifelse(wash_8_diff_infra_1 %!in% c("nsp","aucun") & wash_8_diff_infra_2 %!in% c("nsp","aucun"), wash_8_diff_infra_3, NA),
protec_2_secu_ad_hommes = ifelse(protec_2_secu_ad == "oui", protec_2_secu_ad_hommes, NA),
protec_2_secu_ad_femmes = ifelse(protec_2_secu_ad == "oui", protec_2_secu_ad_femmes, NA),
protec_3_secu_kid_garcons = ifelse(protec_3_secu_kid == "oui", protec_3_secu_kid_garcons, NA),
protec_3_secu_kid_filles = ifelse(protec_3_secu_kid == "oui", protec_3_secu_kid_filles, NA),
protec_4_incident_type_2 = ifelse(protec_4_incident_type_1 %!in% c("nsp","aucun"), protec_4_incident_type_2, NA),
protec_4_incident_type_3 = ifelse(protec_4_incident_type_1 %!in% c("nsp","aucun") & protec_4_incident_type_2 %!in% c("nsp","aucun"), protec_4_incident_type_3, NA),
protec_5_travailforce_type = ifelse(protec_5_travailforce == "oui", protec_5_travailforce_type, NA),
aap_2_goodaide = ifelse(aap_1_aide == "oui", aap_2_goodaide, NA),
aap_4_typeinfos_2 = ifelse(aap_4_typeinfos_1 != "nsp", aap_4_typeinfos_2, NA),
aap_4_typeinfos_3 = ifelse(aap_4_typeinfos_1 != "nsp" & aap_4_typeinfos_2 != "nsp", aap_4_typeinfos_3, NA))
final_data <- bind_rows(template_data, localite_data)
final_data <- final_data %>% replace_with_na_all(condition = ~is.nan(.x))
final_data <- final_data %>% replace_with_na_all(condition = ~.x == "NaN")
??replace_with_na_all
library(naniar)
final_data <- bind_rows(template_data, localite_data)
final_data <- final_data %>% replace_with_na_all(condition = ~is.nan(.x))
final_data <- final_data %>% replace_with_na_all(condition = ~.x == "NaN")
final_data <- final_data %>% select_if(~ !(all(is.na(.x)) | all(. == "")))
# write_csv(final_data, AGGREGATED_DATASET, na = "")
write.csv(final_data, AGGREGATED_DATASET, na = "",row.names = F)
re_create_parent_question <- function(df, multiple_choices, separator){
#Loop throughout received questions
for (m in 1:length(multiple_choices)) {
choice_char_count <- nchar(multiple_choices[m]) + 2
choices <- df %>% select(starts_with(paste0(multiple_choices[m], separator)))
#Loop throughout choices of each question
for (c in 1:length(choices)) {
choice_name <- substring(names(choices[c]),choice_char_count)
#Loop throughout rows of each choice
for (r in 1:nrow(choices)) {
if (!is.na(choices[r,c]) & as.numeric(choices[[c]][r]) == 1 & choices[[c]][r] != "AC") {
temp <- str_detect(df[[multiple_choices[m]]][r], choice_name)
if(!is.na(temp) & !temp){
#Insert the choice name to parent question
df[r, multiple_choices[m]] <- paste(df[[multiple_choices[m]]][r], choice_name, sep = " ")
df[r, multiple_choices[m]] <- gsub("AC ","",df[r, multiple_choices[m]])
}
}
}
}
cat("\014")
print (paste("Creating parent ", m, "of", length(multiple_choices)))
}
return(df)
}
multiple_choices <- c(
"ig_3_groupop",
"abri_1_type",
"secal_7_choc",
"protec_2_secu_ad_hommes",
"protec_2_secu_ad_femmes",
"protec_3_secu_kid_garcons",
"protec_3_secu_kid_filles",
"protec_5_travailforce_type",
"protec_9_commu"
)
parent_created <- re_create_parent_question(final_data, multiple_choices, separator = ".")
View(parent_created)
library(dplyr)
library(readxl)
library(stringr)
data <- read_excel("data/data.xlsx")
data_short_names <- parent_created
recode_df <- read_excel("./input/Questionnaire_Kobo__MSNA2020_ki_final2", sheet = "choices")
recode_df <- read_excel("./input/Questionnaire_Kobo__MSNA2020_ki_final2xlsx, sheet = "choices")
# Recode to labels
for (i in 1: length(data_short_names) ) {
for (j in 1: nrow(data_short_names)) {
for (l in 1:nrow(recode_df)) {
if(data_short_names[j,i] %in% recode_df$name[l]){
data_short_names[j,i] <- recode_df$label[l]
}
}
}
print(paste0("Column ",i , " checked/recoded!"))
}
write.csv(data_short_names,"data/recoded/recoded_data.csv", row.names = F)
recode_df <- read_excel("./input/Questionnaire_Kobo__MSNA2020_ki_final2.xlsx", sheet = "choices")
View(final_data)
rm(list = ls())
##### ADJUST ONLY THE CODE HERE ####
##### UNLESS THE TOOL HAS CHANGED ##
CLEANED_DATASET <- "input/CAR_MSNA2020_KI_H2R_dataset_validated.xlsm"
AGGREGATED_DATASET <- paste0("output/car_msna_ki_aggregated_",lubridate::today(),".csv")
hsm_preferred_response <- function(x, type, preferred_response) {
type <- type[which(!is.na(x))]
x <- x[!is.na(x)]
if (preferred_response %in% x[type %in% c("vit_localite", "visite_localite")]) {
return(preferred_response)
} else if (any(type %in% c("vit_localite", "visite_localite")) | sum(x %in% preferred_response) == 0) {
ux <- unique(x)
table <- tabulate(match(x, ux))
max_appearance <- max(tabulate(match(x, ux)))
num_matches <- length(which(tabulate(match(x, ux)) == max_appearance))
if (num_matches > 1) {
if (sum(x %in% preferred_response) == max_appearance) {
return(preferred_response)
} else {
return("AC")
}
} else {
ux[which.max(tabulate(match(x, ux)))]
}
} else {
return(preferred_response)
}
}
hsm_mode <- function(x, type) {
type <- type[which(!is.na(x))]
x <- x[!is.na(x)]
ux <- unique(x)
table <- tabulate(match(x, ux))
max_appearance <- max(table)
num_matches <- length(which(table == max_appearance))
if (num_matches > 1) {
tied <- ux[which(table == max_appearance)]
tied_visited <- integer(0)
for (i in 1:length(tied)) {
tied_visited[i] <- sum(type[x %in% tied[i]] %in% c("vit_localite", "visite_localite"))
}
if (sum(tied_visited == max(tied_visited)) == 1) {
return (tied[which.max(tied_visited)])
} else {
return("AC")
}
} else {
ux[which.max(table)]
}
}
'%!in%' = Negate('%in%')
#Reading data and form
data <- read_xlsx(CLEANED_DATASET, sheet = "Clean Data", na = c(""," ",NA,999))
names(data)<-gsub("[/]",".",names(data))
# Template dataset to merge at the end
template_data <- data[0,]
# Remove other questions
data <- data %>%
select(everything(), -ends_with("_autre"))
data <- data %>% mutate(
ig_3_groupop_pourcentage_1 = ifelse(ig_3_groupop_pourcentage_somme != "100",NA,ig_3_groupop_pourcentage_1),
ig_3_groupop_pourcentage_2 = ifelse(ig_3_groupop_pourcentage_somme != "100",NA,ig_3_groupop_pourcentage_2),
ig_3_groupop_pourcentage_3 = ifelse(ig_3_groupop_pourcentage_somme != "100",NA,ig_3_groupop_pourcentage_3),
ig_3_groupop_pourcentage_4 = ifelse(ig_3_groupop_pourcentage_somme != "100",NA,ig_3_groupop_pourcentage_4),
ig_3_groupop_pourcentage_5 = ifelse(ig_3_groupop_pourcentage_somme != "100",NA,ig_3_groupop_pourcentage_5),
abri_2_pourcentage_1 = ifelse(abri_2_pourcentage_somme != "100",NA,abri_2_pourcentage_1),
abri_2_pourcentage_2 = ifelse(abri_2_pourcentage_somme != "100",NA,abri_2_pourcentage_2),
abri_2_pourcentage_3 = ifelse(abri_2_pourcentage_somme != "100",NA,abri_2_pourcentage_3),
abri_2_pourcentage_4 = ifelse(abri_2_pourcentage_somme != "100",NA,abri_2_pourcentage_4),
abri_2_pourcentage_5 = ifelse(abri_2_pourcentage_somme != "100",NA,abri_2_pourcentage_5),
abri_2_pourcentage_6 = ifelse(abri_2_pourcentage_somme != "100",NA,abri_2_pourcentage_6),
abri_2_pourcentage_7 = ifelse(abri_2_pourcentage_somme != "100",NA,abri_2_pourcentage_7),
abri_2_pourcentage_8 = ifelse(abri_2_pourcentage_somme != "100",NA,abri_2_pourcentage_8),
abri_2_pourcentage_9 = ifelse(abri_2_pourcentage_somme != "100",NA,abri_2_pourcentage_9),
abri_2_pourcentage_10 = ifelse(abri_2_pourcentage_somme != "100",NA,abri_2_pourcentage_10),
ig_3_groupop_pourcentage_somme = ifelse(ig_3_groupop_pourcentage_somme != "100",NA,ig_3_groupop_pourcentage_somme),
abri_2_pourcentage_somme = ifelse(abri_2_pourcentage_somme != "100",NA,abri_2_pourcentage_somme)
)
# Questions that are always oui
ques_oui <- c("protec_4_incident", "protec_6_kids_outHH_1",  "protec_6_kids_outHH_2" , "protec_6_kids_outHH_3",
"protec_6_kids_outHH_4" , "protec_6_kids_outHH_5" , "protec_6_kids_outHH_6" ,
"protec_6_kids_outHH_7",  "protec_6_kids_outHH_8" , "protec_6_kids_outHH_9" , "protec_6_kids_outHH_10")
proportion_vars <- c("ig_3_groupop_pourcentage_1",	"ig_3_groupop_pourcentage_2",	"ig_3_groupop_pourcentage_3",	"ig_3_groupop_pourcentage_4",
"ig_3_groupop_pourcentage_5",	"ig_3_groupop_pourcentage_somme","abri_2_pourcentage_1"	,
"abri_2_pourcentage_2",	"abri_2_pourcentage_3",	"abri_2_pourcentage_4",	"abri_2_pourcentage_5",	"abri_2_pourcentage_6",
"abri_2_pourcentage_7",	"abri_2_pourcentage_8",	"abri_2_pourcentage_9",	"abri_2_pourcentage_10",	"abri_2_pourcentage_somme")
# Aggregating all questions
oui_localite_data <- data %>%
group_by(info_prefecture_H2R, info_sous_prefecture_H2R, info_commune_H2R, info_loc_H2R) %>%
summarize_at(vars(ques_oui), ~hsm_preferred_response(., .data[["type_contact"]], "oui"))
autre_localite_data_names <- data %>%
select(info_prefecture_H2R, info_sous_prefecture_H2R, info_commune_H2R, info_loc_H2R, ig_2_chocpop:aap_6_retouraide, -one_of(ques_oui),
-one_of(proportion_vars)) %>% names
autre_localite_data<-matrix(NA,length(unique(data$info_loc_H2R)),length(autre_localite_data_names))
colnames(autre_localite_data)<-autre_localite_data_names
autre_localite_data<-as.data.frame(autre_localite_data)
autre_localite_data[,c(1:4)]<-data[!duplicated(data[,c("info_prefecture_H2R", "info_sous_prefecture_H2R", "info_commune_H2R", "info_loc_H2R")]),][,c("info_prefecture_H2R", "info_sous_prefecture_H2R", "info_commune_H2R", "info_loc_H2R")]
for(i in 5:length(autre_localite_data)){
for(j in 1:nrow(autre_localite_data)){
autre_localite_data[j,i]<-hsm_mode(x = data[[names(autre_localite_data)[i]]][which(data$info_loc_H2R==autre_localite_data$info_loc_H2R[j])],
type = data$type_contact[which(data$info_loc_H2R==autre_localite_data$info_loc_H2R[j])])
}
}
numerical_data_names <- data %>%
select(info_prefecture_H2R, info_sous_prefecture_H2R, info_commune_H2R, info_loc_H2R, all_of(proportion_vars)) %>% names
numerical_data<-matrix(NA,length(unique(data$info_loc_H2R)),length(numerical_data_names))
colnames(numerical_data)<-numerical_data_names
numerical_data<-as.data.frame(numerical_data)
numerical_data[,c(1:4)]<-data[!duplicated(data[,c("info_prefecture_H2R", "info_sous_prefecture_H2R", "info_commune_H2R", "info_loc_H2R")]),][,c("info_prefecture_H2R", "info_sous_prefecture_H2R", "info_commune_H2R", "info_loc_H2R")]
for(i in 5:length(numerical_data)){
for(j in 1:nrow(numerical_data)){
numerical_data[j,i]<- as.character(round(mean(as.numeric(data[[names(numerical_data)[i]]][which(data$info_loc_H2R==numerical_data$info_loc_H2R[j])]),na.rm = T)))
}
}
# Aggregating all data
localite_data <- oui_localite_data %>%
left_join(autre_localite_data, by = c("info_prefecture_H2R", "info_sous_prefecture_H2R", "info_commune_H2R", "info_loc_H2R")) %>%
left_join(numerical_data,by = c("info_prefecture_H2R", "info_sous_prefecture_H2R", "info_commune_H2R", "info_loc_H2R"))
localite_data <- localite_data %>%
mutate(ig_2_chocpop_why = ifelse(ig_2_chocpop == "oui", ig_2_chocpop_why, NA),
ig_3_groupop_pourcentage_1 = ifelse(sm_selected(ig_3_groupop,any = c("hote")), ig_3_groupop_pourcentage_1, NA),
ig_3_groupop_pourcentage_2 = ifelse(sm_selected(ig_3_groupop,any = c("IDP_site")), ig_3_groupop_pourcentage_2, NA),
ig_3_groupop_pourcentage_3 = ifelse(sm_selected(ig_3_groupop,any = c("IDP_FA")), ig_3_groupop_pourcentage_3, NA),
ig_3_groupop_pourcentage_4 = ifelse(sm_selected(ig_3_groupop,any = c("retourne")), ig_3_groupop_pourcentage_4, NA),
ig_3_groupop_pourcentage_5 = ifelse(sm_selected(ig_3_groupop,any = c("rapatrie")),ig_3_groupop_pourcentage_5, NA),
ig_4_raison_idp = ifelse(sm_selected(ig_3_groupop,any = c("IDP_site","IDP_FA")), ig_4_raison_idp, NA),
ig_5_choix_idp = ifelse(sm_selected(ig_3_groupop,any = c("IDP_site","IDP_FA")), ig_5_choix_idp, NA),
ig_6_duree_idp = ifelse(sm_selected(ig_3_groupop,any = c("IDP_site","IDP_FA")), ig_6_duree_idp, NA),
ig_7_raisonretour_idp = ifelse(sm_selected(ig_3_groupop,any = c("IDP_site","IDP_FA")), ig_7_raisonretour_idp, NA),
ig_8_raison_ret_rapat = ifelse(sm_selected(ig_3_groupop,any = c("retourne","rapatrie")), ig_8_raison_ret_rapat, NA),
ig_9_destinationfinale_perc = ifelse(sm_selected(ig_3_groupop,any = c("retourne","rapatrie")), ig_9_destinationfinale_perc, NA),
ig_10_destinationfinale_raison = ifelse(sm_selected(ig_3_groupop,any = c("retourne","rapatrie"))& ig_9_destinationfinale_perc != 'ret_rap_destfinale_0', ig_10_destinationfinale_raison, NA),
abri_2_pourcentage_1 = ifelse(abri_1_type.nsp == 0 & abri_1_type.maison_dur_finie == 1, abri_2_pourcentage_1, NA),
abri_2_pourcentage_2 = ifelse(abri_1_type.nsp == 0 & abri_1_type.maison_dur_non_finie == 1, abri_2_pourcentage_2, NA),
abri_2_pourcentage_3 = ifelse(abri_1_type.nsp == 0 & abri_1_type.maison_semi_dur == 1, abri_2_pourcentage_3, NA),
abri_2_pourcentage_4 = ifelse(abri_1_type.nsp == 0 & abri_1_type.habitat_paille == 1, abri_2_pourcentage_4, NA),
abri_2_pourcentage_5 = ifelse(abri_1_type.nsp == 0 & abri_1_type.abri_collectif == 1, abri_2_pourcentage_5, NA),
abri_2_pourcentage_6 = ifelse(abri_1_type.nsp == 0 & abri_1_type.tente == 1, abri_2_pourcentage_6, NA),
abri_2_pourcentage_7 = ifelse(abri_1_type.nsp == 0 & abri_1_type.abri_urgence_bache == 1, abri_2_pourcentage_7, NA),
abri_2_pourcentage_8 = ifelse(abri_1_type.nsp == 0 & abri_1_type.abri_urgence_paille == 1, abri_2_pourcentage_8, NA),
abri_2_pourcentage_9 = ifelse(abri_1_type.nsp == 0 & abri_1_type.aucun == 1, abri_2_pourcentage_9, NA),
abri_2_pourcentage_10 = ifelse(abri_1_type.nsp == 0 & abri_1_type.autre == 1, abri_2_pourcentage_10, NA),
abri_4_problem_2 = ifelse(abri_4_problem_1 %!in% c("nsp","aucun"), abri_4_problem_2, NA),
abri_4_problem_3 = ifelse(abri_4_problem_1 %!in% c("nsp","aucun") & abri_4_problem_2 %!in% c("nsp","aucun"), abri_4_problem_3, NA),
abri_5_damage_2 = ifelse(abri_5_damage_1 %!in% c("nsp","aucun"), abri_5_damage_2, NA),
abri_5_damage_3 =ifelse(abri_5_damage_1 %!in% c("nsp","aucun") & abri_5_damage_2 %!in% c("nsp","aucun"), abri_5_damage_3, NA),
sante_1_1_maternite = ifelse(sante_1_maternite == "maison", sante_1_1_maternite, NA),
sante_1_2_maternite = ifelse(sante_1_maternite == "maison" & sante_1_1_maternite != "nsp", sante_1_2_maternite, NA),
sante_1_3_maternite = ifelse(sante_1_maternite == "maison" & sante_1_1_maternite != "nsp" & sante_1_2_maternite != "nsp", sante_1_3_maternite, NA),
sante_2_diff_soin_2 = ifelse(sante_2_diff_soin_1 %!in% c("nsp","aucun"), sante_2_diff_soin_2, NA),
sante_2_diff_soin_3 = ifelse(sante_2_diff_soin_1 %!in% c("nsp","aucun") & sante_2_diff_soin_2 %!in% c("nsp","aucun"), sante_2_diff_soin_3, NA),
sante_6_deces_2 = ifelse(sante_6_deces_1 != "nsp", sante_6_deces_2, NA),
sante_6_deces_3 = ifelse(sante_6_deces_1 != "nsp" & sante_6_deces_2 != "nsp", sante_6_deces_3, NA),
secal_2_income_source_2 = ifelse(secal_2_income_source_1 != "nsp", secal_2_income_source_2, NA),
secal_2_income_source_3 = ifelse(secal_2_income_source_1 != "nsp" & secal_2_income_source_2 != "nsp", secal_2_income_source_3, NA),
secal_4_agri_diff_2 = ifelse(secal_4_agri_diff_1 != "nsp", secal_4_agri_diff_2, NA),
secal_4_agri_diff_3 = ifelse(secal_4_agri_diff_1 != "nsp" & secal_4_agri_diff_2 != "nsp", secal_4_agri_diff_3, NA),
mssc_1_foodsource_2 = ifelse(mssc_1_foodsource_1 != "nsp", mssc_1_foodsource_2, NA),
mssc_1_foodsource_3 = ifelse(mssc_1_foodsource_1 != "nsp" & mssc_1_foodsource_2 != "nsp", mssc_1_foodsource_3, NA),
mssc_4_marketappro_2 = ifelse(mssc_4_marketappro_1 %!in% c("nsp","aucun"), mssc_4_marketappro_2, NA),
mssc_4_marketappro_3 = ifelse(mssc_4_marketappro_1 %!in% c("nsp","aucun") & mssc_4_marketappro_2 %!in% c("nsp","aucun"), mssc_4_marketappro_3, NA),
nut_4_diff_soin_2 = ifelse(nut_4_diff_soin_1 %!in% c("nsp","aucun"), nut_4_diff_soin_2, NA),
nut_4_diff_soin_3 = ifelse(nut_4_diff_soin_1 %!in% c("nsp","aucun") & nut_4_diff_soin_2 %!in% c("nsp","aucun"), nut_4_diff_soin_3, NA),
wash_4_diff_eau_2 = ifelse(wash_4_diff_eau_1 %!in% c("nsp","aucun"), wash_4_diff_eau_2, NA),
wash_4_diff_eau_3 = ifelse(wash_4_diff_eau_1 %!in% c("nsp","aucun") & wash_4_diff_eau_2 %!in% c("nsp","aucun"), wash_4_diff_eau_3, NA),
wash_7_genre = ifelse(wash_6_infra_20p == "oui", wash_7_genre, NA),
wash_8_diff_infra_2 = ifelse(wash_8_diff_infra_1 %!in% c("nsp","aucun"), wash_8_diff_infra_2, NA),
wash_8_diff_infra_3 = ifelse(wash_8_diff_infra_1 %!in% c("nsp","aucun") & wash_8_diff_infra_2 %!in% c("nsp","aucun"), wash_8_diff_infra_3, NA),
protec_2_secu_ad_hommes = ifelse(protec_2_secu_ad == "oui", protec_2_secu_ad_hommes, NA),
protec_2_secu_ad_femmes = ifelse(protec_2_secu_ad == "oui", protec_2_secu_ad_femmes, NA),
protec_3_secu_kid_garcons = ifelse(protec_3_secu_kid == "oui", protec_3_secu_kid_garcons, NA),
protec_3_secu_kid_filles = ifelse(protec_3_secu_kid == "oui", protec_3_secu_kid_filles, NA),
protec_4_incident_type_2 = ifelse(protec_4_incident_type_1 %!in% c("nsp","aucun"), protec_4_incident_type_2, NA),
protec_4_incident_type_3 = ifelse(protec_4_incident_type_1 %!in% c("nsp","aucun") & protec_4_incident_type_2 %!in% c("nsp","aucun"), protec_4_incident_type_3, NA),
protec_5_travailforce_type = ifelse(protec_5_travailforce == "oui", protec_5_travailforce_type, NA),
aap_2_goodaide = ifelse(aap_1_aide == "oui", aap_2_goodaide, NA),
aap_4_typeinfos_2 = ifelse(aap_4_typeinfos_1 != "nsp", aap_4_typeinfos_2, NA),
aap_4_typeinfos_3 = ifelse(aap_4_typeinfos_1 != "nsp" & aap_4_typeinfos_2 != "nsp", aap_4_typeinfos_3, NA))
final_data <- bind_rows(template_data, localite_data)
final_data <- final_data %>% replace_with_na_all(condition = ~is.nan(.x))
final_data <- final_data %>% replace_with_na_all(condition = ~.x == "NaN")
final_data <- final_data %>% select_if(~ !(all(is.na(.x)) | all(. == "")))
re_create_parent_question <- function(df, multiple_choices, separator){
#Loop throughout received questions
for (m in 1:length(multiple_choices)) {
choice_char_count <- nchar(multiple_choices[m]) + 2
choices <- df %>% select(starts_with(paste0(multiple_choices[m], separator)))
#Loop throughout choices of each question
for (c in 1:length(choices)) {
choice_name <- substring(names(choices[c]),choice_char_count)
#Loop throughout rows of each choice
for (r in 1:nrow(choices)) {
if (!is.na(choices[r,c]) & as.numeric(choices[[c]][r]) == 1 & choices[[c]][r] != "AC") {
temp <- str_detect(df[[multiple_choices[m]]][r], choice_name)
if(!is.na(temp) & !temp){
#Insert the choice name to parent question
df[r, multiple_choices[m]] <- paste(df[[multiple_choices[m]]][r], choice_name, sep = " ")
df[r, multiple_choices[m]] <- gsub("AC ","",df[r, multiple_choices[m]])
}
}
}
}
cat("\014")
print (paste("Creating parent ", m, "of", length(multiple_choices)))
}
return(df)
}
multiple_choices <- c(
"ig_3_groupop",
"abri_1_type",
"secal_7_choc",
"protec_2_secu_ad_hommes",
"protec_2_secu_ad_femmes",
"protec_3_secu_kid_garcons",
"protec_3_secu_kid_filles",
"protec_5_travailforce_type",
"protec_9_commu"
)
parent_created <- re_create_parent_question(final_data, multiple_choices, separator = ".")
View(parent_created)
data_short_names <- parent_created
recode_df <- read_excel("./input/Questionnaire_Kobo__MSNA2020_ki_final2.xlsx", sheet = "choices")
# Recode to labels
for (i in 1: length(data_short_names) ) {
for (j in 1: nrow(data_short_names)) {
for (l in 1:nrow(recode_df)) {
if(data_short_names[j,i] %in% recode_df$name[l]){
data_short_names[j,i] <- recode_df$label[l]
}
}
}
print(paste0("Column ",i , " checked/recoded!"))
}
View(data_short_names)
write.csv(data_short_names, AGGREGATED_DATASET, na = "",row.names = F)
final_data %>% mutate(somme = rowSums(select(.,"ig_3_groupop_pourcentage_1",	"ig_3_groupop_pourcentage_2",	"ig_3_groupop_pourcentage_3",	"ig_3_groupop_pourcentage_4",
"ig_3_groupop_pourcentage_5"),na.rm = T)) %>% select(somme)
remove.packages("dplyr")
library(dplyr)
